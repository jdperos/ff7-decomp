main = 0x80011C1C;
SetupGamepad = 0x8001C434;
SYS_gil = 0x80025B7C;
func_80026A0C = 0x80026A0C;
ClearSpuTransferCallback = 0x800293D0;
SetupSpuTransferCallback = 0x800293F4;
WriteSpuWithCallback = 0x80029424;
ReadSpuWithCallback = 0x80029464;
WaitSpuTransferComplete = 0x800294A4;
SetReverbMode = 0x80029AF0;
DS_init = 0x80033B70;
DS_reset_members = 0x80033C08;
DS_close = 0x80033CE0;
DS_cw = 0x80033D20;
DS_sync_callback = 0x80033DA8;
DS_ready_callback = 0x80033DB4;
DS_start_callback = 0x80033DC0;
DS_system_status = 0x80033DCC;
DS_lastcom = 0x80033DE4;
DS_lastmode = 0x80033DF4;
DS_lastpos = 0x80033E04;
DS_lastseek = 0x80033E10;
DS_lastread = 0x80033E20;
DS_status = 0x80033E30;
DS_sync = 0x80033E40;
DS_ready = 0x80033E64;
DS_shell_open = 0x80033E88;
DS_cw_system = 0x80033E98;
DS_stop = 0x80034AC4;
DS_restart = 0x80034B3C;
parcpy = 0x80034B5C;
tipDsSystem = 0x80034BEC;
_spu_write = 0x80036CA8;
_spu_read = 0x80036D30;
_spu_FsetRXX = 0x80036D98;
_spu_FsetRXXa = 0x80036DE0;
_spu_FgetRXXa = 0x80036E84;
SpuInitMalloc = 0x80036FFC;
_SpuMallocSeparateTo3 = 0x80037050;
SpuMallocWithStartAddr = 0x800373AC;
_spu_gcSPU = 0x80037664;
SpuRead = 0x80037BE0;
SpuSetReverb = 0x80037C40;
SpuSetReverbModeParam = 0x80037E1C;
_spu_setReverbAttr = 0x8003832C;
SpuGetReverbModeParam = 0x800387FC;
SpuSetReverbDepth = 0x8003884C;
SpuSetReverbVoice = 0x800388C4;
SpuClearReverbWorkArea = 0x800388E8;
SpuSetIRQ = 0x80038A84;
SpuSetIRQAddr = 0x80038BC4;
SpuSetIRQCallback = 0x80038C04;
SpuWrite = 0x80038F04;
SpuSetTransferMode = 0x80038FB8;
SpuSetTransferCallback = 0x80038FEC;
SpuSetVoiceVolumeAttr = 0x80039450;
rsin = 0x80039A74;
sin_1 = 0x80039AB0;
rcos = 0x80039B40;
func_8003A08C = 0x8003A08C;
func_8003A0B8 = 0x8003A0B8;
gteMIMefunc = 0x8003A28C;
LoadAverage12 = 0x8003A30C;
LoadAverage0 = 0x8003A35C;
LoadAverageShort12 = 0x8003A3AC;
LoadAverageShort0 = 0x8003A434;
LoadAverageByte = 0x8003A4BC;
LoadAverageCol = 0x8003A51C;
CompMatrix = 0x8003A63C;
SetMulMatrix = 0x8003AA74;
ReadColorMatrix = 0x8003B008;
MulMatrix = 0x8003B05C;
MulMatrix2 = 0x8003B16C;
ApplyMatrix = 0x8003B27C;
ApplyMatrixSV = 0x8003B2CC;
TransMatrix = 0x8003B32C;
SetRotMatrix = 0x8003B48C;
SetLightMatrix = 0x8003B4BC;
SetColorMatrix = 0x8003B4EC;
SetTransMatrix = 0x8003B51C;
SetVertex0 = 0x8003B53C;
SetVertex1 = 0x8003B54C;
SetVertex2 = 0x8003B55C;
SetVertexTri = 0x8003B56C;
SetRGBfifo = 0x8003B58C;
SetIR123 = 0x8003B5A0;
SetIR0 = 0x8003B5B4;
SetSZfifo3 = 0x8003B5C0;
SetSZfifo4 = 0x8003B5D4;
SetSXSYfifo = 0x8003B5EC;
SetRii = 0x8003B600;
SetMAC123 = 0x8003B614;
SetData32 = 0x8003B628;
SetDQA = 0x8003B634;
SetDQB = 0x8003B640;
ReadGeomOffset = 0x8003B64C;
ReadGeomScreen = 0x8003B66C;
SetBackColor = 0x8003B67C;
SetFarColor = 0x8003B69C;
SetGeomOffset = 0x8003B6BC;
SetGeomScreen = 0x8003B6DC;
LocalLight = 0x8003B6EC;
DpqColor = 0x8003B710;
NormalColor = 0x8003B72C;
NormalColor3 = 0x8003B748;
NormalColorDpq = 0x8003B784;
NormalColorDpq3 = 0x8003B7A8;
NormalColorCol = 0x8003B7F0;
NormalColorCol3 = 0x8003B810;
ColorDpq = 0x8003B854;
ColorCol = 0x8003B87C;
AverageSZ3 = 0x8003B8A0;
AverageSZ4 = 0x8003B8B0;
LightColor = 0x8003B8CC;
DpqColorLight = 0x8003B8F4;
DpqColor3 = 0x8003B91C;
Intpl = 0x8003B958;
Square12 = 0x8003B97C;
Square0 = 0x8003B9A4;
AverageZ3 = 0x8003B9CC;
AverageZ4 = 0x8003B9EC;
OuterProduct12 = 0x8003BA10;
OuterProduct0 = 0x8003BA68;
Lzc = 0x8003BAC0;
RotTransSV = 0x8003BADC;
SquareSS12 = 0x8003BB0C;
SquareSS0 = 0x8003BB44;
SquareSL12 = 0x8003BB7C;
SquareSL0 = 0x8003BBAC;
RotTransPers = 0x8003BBDC;
RotTransPers3 = 0x8003BC0C;
RotTrans = 0x8003BC6C;
RotTransPers4 = 0x8003BC9C;
RotAverage3 = 0x8003BD1C;
RotAverage4 = 0x8003BD7C;
RotAverageNclip3 = 0x8003BDFC;
RotAverageNclip4 = 0x8003BE8C;
RotMatrix = 0x8003BF8C;
RotMatrixYXZ = 0x8003C21C;
RotMatrixZYX = 0x8003C4AC;
RotMatrixX = 0x8003C73C;
RotMatrixY = 0x8003C8DC;
RotMatrixZ = 0x8003CA7C;
ratan2 = 0x8003CC1C;
func_8003CE3C = 0x8003CE3C;
PadRead = 0x8003CE8C;
VSync = 0x8003CEDC;
v_wait = 0x8003D024;
ResetCallback = 0x8003D0C0;
InterruptCallback = 0x8003D0F0;
DMACallback = 0x8003D120;
VSyncCallback = 0x8003D150;
VSyncCallbacks = 0x8003D184;
StopCallback = 0x8003D1B4;
RestartCallback = 0x8003D1E4;
CheckCallback = 0x8003D214;
GetIntrMask = 0x8003D224;
SetIntrMask = 0x8003D23C;
startIntr = 0x8003D258;
trapIntr = 0x8003D334;
setIntr = 0x8003D51C;
stopIntr = 0x8003D670;
restartIntr = 0x8003D71C;
memclr = 0x8003D7A4;
startIntrVSync = 0x8003D7D0;
trapIntrVSync = 0x8003D828;
setIntrVSync = 0x8003D8A0;
DMA_memclr = 0x8003D8CC;
startIntrDMA = 0x8003D8F8;
trapIntrDMA = 0x8003D948;
setIntrDMA = 0x8003DACC;
VSync_memclr = 0x8003DB74;
StSetRing = 0x8003DBA0;
CdInit = 0x8003DBD0;
def_cbread = 0x8003DC60;
def_cbready = 0x8003DC88;
def_cbsync = 0x8003DCB0;
CdLastPos = 0x8003DD08;
CdReset = 0x8003DD18;
CdControl = 0x8003DE9C;
CdControlF = 0x8003DFD4;
CdControlB = 0x8003E100;
CdMix = 0x8003E244;
CdGetSector = 0x8003E268;
CdIntToPos = 0x8003E2D0;
CdPosToInt = 0x8003E3D4;
getintr = 0x8003E454;
CD_sync = 0x8003E9DC;
CD_ready = 0x8003EC60;
CD_vol = 0x8003F398;
CD_flush = 0x8003F420;
CD_initvol = 0x8003F500;
CD_initintr = 0x8003F5F4;
CD_init = 0x8003F644;
CD_datasync = 0x8003F830;
CD_getsector = 0x8003F99C;
callback = 0x8003FAAC;
CdSearchFile = 0x8003FB8C;
_cmp = 0x8003FE74;
CD_searchdir = 0x8004018C;
cd_read = 0x800404F4;
cd_memcpy = 0x80040560;
CdRead2 = 0x80040594;
StClearRing = 0x80040898;
StUnSetRing = 0x800408F8;
data_ready_callback = 0x80040950;
StGetBackloc = 0x800409E0;
StSetStream = 0x80040A40;
StFreeRing = 0x80040AC8;
init_ring_status = 0x80040B84;
StGetNext = 0x80040BC4;
StCdInterrupt = 0x80040CA8;
mem2mem = 0x80041620;
dma_execute = 0x80041654;
cb_read = 0x800418D8;
cd_read_retry = 0x80041AFC;
CdRead = 0x80041D28;
CdReadSync = 0x80041E30;
DecDCTReset = 0x80041F14;
DecDCTGetEnv = 0x80041F4C;
DecDCTBufSize = 0x80042038;
DecDCTin = 0x80042044;
PadChkVsync = 0x80042100;
PadStartCom = 0x80042120;
PadStopCom = 0x80042140;
PadChkMtap = 0x80042160;
PadGetState = 0x800421AC;
PadInfoMode = 0x8004226C;
MDEC_in = 0x80042270;
MDEC_out = 0x80042304;
MDEC_in_sync = 0x80042394;
MDEC_out_sync = 0x8004242C;
PadSetActAlign = 0x800424E0;
PadSetAct = 0x80042560;
DecDCTvlcSize2 = 0x800425FC;
DecDCTvlc2 = 0x8004262C;
InitHeap = 0x80042990;
FlushCache = 0x800429A0;
_bu_init = 0x800429B0;
SetMem = 0x800429D0;
SystemError = 0x800429E0;
DeliverEvent = 0x800429F0;
OpenEvent = 0x80042A00;
CloseEvent = 0x80042A10;
WaitEvent = 0x80042A20;
TestEvent = 0x80042A30;
EnableEvent = 0x80042A40;
DisableEvent = 0x80042A50;
InitPAD2 = 0x80042A60;
StartPAD2 = 0x80042A70;
StopPAD2 = 0x80042A80;
PAD_init2 = 0x80042A90;
PAD_dr = 0x80042AA0;
ReturnFromException = 0x80042AB0;
ResetEntryInt = 0x80042AC0;
HookEntryInt = 0x80042AD0;
UnDeliverEvent = 0x80042AE0;
EnterCriticalSection = 0x80042AF0;
ExitCriticalSection = 0x80042B00;
SetSp = 0x80042B10;
open = 0x80042B20;
read = 0x80042B30;
write = 0x80042B40;
close = 0x80042B50;
format = 0x80042B60;
firstfile2 = 0x80042B70;
nextfile = 0x80042B80;
erase = 0x80042B90;
ChangeClearPAD = 0x80042BA0;
ChangeClearRCnt = 0x80042BB0;
SetRCnt = 0x80042BC0;
GetRCnt = 0x80042C60;
StartRCnt = 0x80042C98;
StopRCnt = 0x80042CCC;
ResetRCnt = 0x80042D00;
exit = 0x80042D38;
setjmp = 0x80042D58;
strcmp = 0x80042D68;
strncmp = 0x80042D78;
bcopy = 0x80042D88;
memcpy = 0x80042D98;
rand = 0x80042DA8;
srand = 0x80042DB8;
printf = 0x80042DC8;
func_80042DD8 = 0x80042DD8;
strlen = 0x80043634;
memchr = 0x80043644;
memmove = 0x80043654;
LoadTPage = 0x800436C0;
LoadClut = 0x800437AC;
SetDefDrawEnv = 0x80043814;
SetDefDispEnv = 0x800438D4;
GsGetWorkBase = 0x80043928;
SetDispMask = 0x80043D3C;
DrawSync = 0x80043DD8;
ClearImage = 0x80043F6C;
LoadImage = 0x80044000;
StoreImage = 0x80044064;
MoveImage = 0x800440C8;
ClearOTag = 0x8004418C;
ClearOTagR = 0x80044244;
DrawPrim = 0x800442DC;
DrawOTag = 0x8004433C;
PutDrawEnv = 0x800443B0;
GetDrawEnv = 0x80044474;
PutDispEnv = 0x800444AC;
GetDispEnv = 0x800448D0;
GetODE = 0x80044908;
SetTexWindow = 0x8004493C;
SetDrawArea = 0x80044978;
SetDrawOffset = 0x800449FC;
SetPriority = 0x80044A40;
SetDrawMode = 0x80044A68;
get_tw = 0x80044FA0;
_status = 0x800450E0;
_otc = 0x800450F8;
_cwb = 0x80045934;
_cwc = 0x80045984;
_param = 0x800459D0;
set_alarm = 0x800462B0;
GPU_memset = 0x80046530;
GPU_cw = 0x8004655C;
GetTPage = 0x8004656C;
GetClut = 0x80046634;
DumpTPage = 0x8004664C;
DumpClut = 0x8004671C;
NextPrim = 0x8004675C;
IsEndPrim = 0x80046778;
AddPrim = 0x80046794;
AddPrims = 0x800467D0;
CatPrim = 0x8004680C;
TermPrim = 0x80046830;
SetSemiTrans = 0x80046848;
SetShadeTex = 0x80046870;
SetPolyF3 = 0x80046898;
SetPolyFT3 = 0x800468AC;
SetPolyG3 = 0x800468C0;
SetPolyGT3 = 0x800468D4;
SetPolyF4 = 0x800468E8;
SetPolyFT4 = 0x800468FC;
SetPolyG4 = 0x80046910;
SetPolyGT4 = 0x80046924;
SetSprt8 = 0x80046938;
SetSprt16 = 0x8004694C;
SetSprt = 0x80046960;
SetTile1 = 0x80046974;
SetTile8 = 0x80046988;
SetTile16 = 0x8004699C;
SetTile = 0x800469B0;
SetBlockFill = 0x800469C4;
SetLineF2 = 0x800469D8;
SetLineG2 = 0x800469EC;
SetLineF3 = 0x80046A0C;
SetLineG3 = 0x80046A2C;
SetLineF4 = 0x80046A4C;
SetLineG4 = 0x80046A6C;
MargePrim = 0x80046A9C;
DumpDispEnv = 0x80046C50;
OpenTIM = 0x80046CFC;
ReadTIM = 0x80046D0C;
OpenTMD = 0x80046D70;
ReadTMD = 0x80046DB0;
_card_info = 0x80048968;
_card_load = 0x80048978;
_card_auto = 0x80048988;
func_80048998 = 0x80048998;
_card_write = 0x800489D0;
_new_card = 0x800489E0;
InitCARD = 0x800489F0;
StartCARD = 0x80048A5C;
StopCARD = 0x80048A94;
StopCARD2 = 0x80048ACC;

// Pad Globals
g_bPadsInitialized = 0x80062D70;
D_800696AC         = 0x800696AC;

// Audio Globals
g_ReverbMode = 0x8009A140;
g_ReverbAttr = 0x8009C564; // type:SpuReverbAttr size:0x14